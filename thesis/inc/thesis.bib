@book{game_programming_patterns,
    author = {Robert Nystrom},
    title = {Game Programming Patterns},
    publisher = {Genever Benning},
    year = {2014},
}

@book{game_engine_architecture,
    author = {Jason Gregory},
    title = {Game Engine Architecture},
    publisher = {CRC Press},
    year = {2014},
}

@misc{stack_overflow_time_output,
    author = {ConcernedOfTunbridgeWells},
    howpublished = {Stack Overflow},
    title = {What do 'real', 'user' and 'sys' mean in the output of time(1)?},
    url = {https://web.archive.org/web/20170515194238/http://stackoverflow.com/questions/556405/what-do-real-user-and-sys-mean-in-the-output-of-time1},
    year = {2009},
    note = {retrieved: 07.05.2017}
}

@misc{iso_cpp_member_function_pointers,
    author = {{Standard C++ Foundation}},
    howpublished = {isocpp.org},
    note = {retrieved: 14.05.2017},
    title = {Pointers to Member Functions},
    url = {https://web.archive.org/web/20170515194316/https://isocpp.org/wiki/faq/pointers-to-members},
}

@misc{massif_manual,
    author = {Valgrind},
    howpublished = {http://valgrind.org},
    title = {Massif: a heap profiler},
    url = {https://web.archive.org/web/20170515194341/http://valgrind.org/docs/manual/ms-manual.html},
    note = {retrieved: 07.05.2017},
}

@misc{callgrind_manual,
    author = {Valgrind},
    howpublished = {http://valgrind.org},
    title = {Callgrind: a call-graph generating cache and branch prediction profiler},
    url = {https://web.archive.org/web/20170515194432/http://valgrind.org/docs/manual/cl-manual.html},
    note = {retrieved: 07.05.2017},
}

@mist{stack_overflow_rdtcs,
    author = {Damon},
    howpublished = {Stack Overflow},
    title = {Getting cpu cycles using RDTSC - why does the value of RDTSC always increase?},
    url =  {https://web.archive.org/web/20170515194456/http://stackoverflow.com/questions/8602336/getting-cpu-cycles-using-rdtsc-why-does-the-value-of-rdtsc-always-increase},
    year = {2011},
    note = {retrieved: 07.05.2017},
}

@misc{stack_overflow_why_does_cpp_compilation_take_so_long,
    author = {jalf},
    howpublished = {Stack Overflow},
    note = {retrieved: 12.04.2017},
    title = {Why does C++ compilation take so long?},
    url = {https://web.archive.org/web/20170515194544/http://stackoverflow.com/questions/318398/why-does-c-compilation-take-so-long},
    year = {2008},
}

@misc{dr_dobbs_cpp_compilation_speed,
    author = {Walter Bright},
    year = {2010},
    title = {C++ Compilation Speed},
    howpublished  = {drdobbs.com},
    url = {https://web.archive.org/web/20170515194625/http://www.drdobbs.com/cpp/c-compilation-speed/228701711},
    note = {retrieved: 12.04.2017},
}

@misc{codersource_virtual_functions,
    howpublished = {\url{http://wayback.archive.org/web/20100209040010/http://www.codersource.net/published/view/325/virtual_functions_in.aspx}},
    note = {retrieved: 12.04.2017},
}

@misc{lazarenko_devirtualization,
    howpublished = {lazarenko.me/},
    url = {https://web.archive.org/web/20170515194724/http://lazarenko.me/devirtualization/},
    note = {retrieved: 12.04.2017},
    year = {2013},
    title = {C++ Devirtualization},
    author = {Vlad Lazarenko},
}

@misc{scott_meyers_cpu_caches_and_why_you_care,
    author = {Scott Meyers},
    howpublished = {code::dive},
    note = {retrieved: 12.04.2017},
    title = {Cpu Caches and Why You Care},
    url = {https://www.youtube.com/watch?v=WDIkqP4JbkE},
    year = {2014},
}

@misc{preshing_weak_vs_strong_memory_models,
    author = {Jeff Preshing},
    note = {retrieved: 12.04.2017},
    title = {Weak vs. Strong Memory Models},
    howpublished = {preshing.com},
    url = {https://web.archive.org/web/20170515194916/http://preshing.com/20120930/weak-vs-strong-memory-models/},
    year = {2012},
}

@misc{andrei_alexandrescu_quick_code_quickly,
    author = {Andrei Alexandrescu},
    howpublished = {Going Native 2013},
    note = {retrieved: 12.04.2017},
    title = {Writing Quick Code in C++, Quickly},
    url = {https://channel9.msdn.com/Events/GoingNative/2013/Writing-Quick-Code-in-Cpp-Quickly},
    year = {2013},
}

@misc{android_activity_lifecycle,
    author = {{Android}},
    howpublished = {developer.android.com},
    note = {retrieved: 14.04.2017},
    title = {The Activity Lifecycle},
    url = {https://web.archive.org/web/20170515194945/https://developer.android.com/guide/components/activities/activity-lifecycle.html},
}

@misc{molecular_matters_dod_external_references,
    author = {Stefan Reinalter},
    howpublished = {blog.molecular-matters.com},
    note = {retrieved: 24.04.2017},
    title = {Adventures in data-oriented design – Part 3c: External References},
    url = {https://web.archive.org/web/20170515195019/https://blog.molecular-matters.com/2013/07/24/adventures-in-data-oriented-design-part-3c-external-references/},
    year = {2013},
}

@misc{williams_safety_off,
    author = {Anthony Williams},
    howpublished = {NDC OSLO},
    note = {retrieved: 01.05.2017},
    title = {Safety: off How not to shoot yourself in the foot with C++ atomics},
    url = {https://www.youtube.com/watch?v=ce_2AWH7UJU},
    year = {2016},
}

@misc{gcc_openmp_support,
    author = {{OpenMP}},
    howpublished = {openmp.org},
    note = {retrieved: 02.05.2017},
    title = {OpenMP Compilers},
    url = {https://web.archive.org/web/20170515195054/http://www.openmp.org/resources/openmp-compilers/},
}

@misc{microsoft_openmp_support,
    author = {{Microsoft}},
    howpublished = {docs.microsoft.com},
    note = {retrieved: 02.05.2017},
    title = {OpenMP in Visual C++},
    url = {https://web.archive.org/web/20170515195123/https://docs.microsoft.com/en-us/cpp/parallel/openmp/openmp-in-visual-cpp},
    year = {2016},
}

@misc{cppreference_atomic_compare_exchange,
    author = {Cppreference},
    howpublished = {cppreference.com},
    title = {std::atomic::compare\_exchange\_weak, std::atomic::compare\_exchange\_strong},
    url = {https://web.archive.org/web/20170509173114/http://en.cppreference.com/w/cpp/atomic/atomic/compare_exchange},
    note = {retrieved: 05.05.2017},
}

@article{understanding_and_preventing_aba_problem,
    author = {Damian Dechev and Peter Pirkelbauer and Bjarne Stroustrup},
    title = {Understanding and Effectively Preventing the ABA Problem in Descriptor-based Lock-free Designs},
    howpublished = {2010 13th IEEE International Symposium on Object/Component/Service-Oriented Real-Time Distributed Computing},
    publisher = {IEEE},
    url = {http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5479555},
    note = {retrieved: 06.05.2017},
}

@misc{cppcon_modules_state_of_the_union,
    author = {Gabriel Dos Reis},
    howpublished = {CppCon},
    note = {retrieved: 06.05.2017},
    title = {C++ Modules: The State of The Union},
    url = {https://www.youtube.com/watch?v=IA14LXnBcJg},
    year = {2016},
}

@misc{microsoft_modules_support,
    author = {Andrew Pardoe},
    url = {https://blogs.msdn.microsoft.com/vcblog/2017/05/05/cpp-modules-in-visual-studio-2017/},
    year = {2017},
    title = {Using C++ Modules in Visual Studio 2017},
    howpublished = {blogs.msdn.microsoft.com},
    note = {retrieved: 06.05.2017},
}

@misc{clang_modules_support,
    autor = {Clang},
    title = {MODULES},
    url = {https://web.archive.org/web/20170515195522/https://clang.llvm.org/docs/Modules.html},
    howpublished = {clang.llvm.org/},
    note = {retrieved: 06.05.2017},
}

@misc{isocpp_standardization_status,
    author = {{Standard C++ Foundation}},
    howpublished = {isocpp.org},
    note = {retrieved: 06.05.2017},
    title = {Current Status},
    url = {https://web.archive.org/web/20170515195845/https://isocpp.org/std/status},
}

@misc{herb_sutter_atomic_weapons,
    author = {Herb Sutter},
    howpublished = {C++ and Beyond},
    note = {retrieved: 06.05.2017},
    title = {atomic<> weapons},
    url = {https://channel9.msdn.com/Shows/Going+Deep/Cpp-and-Beyond-2012-Herb-Sutter-atomic-Weapons-2-of-2},
    year = {2012},
}

@misc{brett_hall_transactional_memory_in_practice,
    author = {Brett Hall},
    howpublished = {CppCon},
    note = {retrieved: 07.05.2017},
    title = {Transactional Memory in Practice},
    url = {https://www.youtube.com/watch?v=k20nWb9fHj0},
    year = {2015},
}

@misc{t_machine_entity_systems,
    author = {Adam Martin},
    howpublished = {t-machine.org},
    note = {retrieved: 08.05.2017},
    title = {Entity Systems are the future of MMOG development – Part 2},
    url = {https://web.archive.org/web/20170515195914/http://t-machine.org/index.php/2007/11/11/entity-systems-are-the-future-of-mmog-development-part-2/},
    year = {2007},
}

